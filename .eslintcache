[{"C:\\node\\To do list\\app\\todo-list\\src\\index.js":"1","C:\\node\\To do list\\app\\todo-list\\src\\App.js":"2","C:\\node\\To do list\\app\\todo-list\\src\\reportWebVitals.js":"3","C:\\node\\To do list\\app\\todo-list\\src\\Task.js":"4"},{"size":513,"mtime":1609943455977,"results":"5","hashOfConfig":"6"},{"size":1279,"mtime":1609943450355,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2214,"mtime":1609882992610,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1u8fgzm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"C:\\node\\To do list\\app\\todo-list\\src\\index.js",[],["21","22"],"C:\\node\\To do list\\app\\todo-list\\src\\App.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\reportWebVitals.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\Task.js",["23"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction Task(props) {\r\n  // This state changes to 'false' when double clicked on task '<p>' and goes back to 'true' with 'onBlur'\r\n  const [descInput, setDescInput] = useState(props.task.description === \"\" ? true : false);\r\n\r\n  const inputRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n    inputRef.current.select();\r\n  }, [descInput]);\r\n\r\n  const checkboxOnChange = () => {      // Handles checkbox clicks and lifting state up\r\n    const changedTask = props.task;\r\n    changedTask.completed = !changedTask.completed;\r\n    props.changeTask(changedTask);\r\n  }\r\n\r\n  const handleTextOnChange = (e) => {   // Handles user changes of input with task description and lifting state up\r\n    const changedTask = props.task;\r\n    changedTask.description = e.target.value;\r\n    props.changeTask(changedTask);\r\n  }\r\n\r\n  const handleOnDblClick = (e) => {\r\n    setDescInput(true);\r\n  }\r\n\r\n  const handleOnBlur = () => {\r\n    setDescInput(false);\r\n  }\r\n\r\n  /* if (descInput) { \r\n    return (  // Task with plain text to display\r\n      <li key={props.task.key}>\r\n        <input type=\"checkbox\" id=\"task\" onChange={checkboxOnChange} checked={props.task.completed}/>\r\n        <p className={props.task.completed ? \"task-text-input finished\" : \"task-text-input\"} onDoubleClick={handleOnDblClick}>{props.task.description}</p>\r\n        <button className=\"delete-task-button\" onClick={() => props.deleteTask(props.task.key)}><i className=\"fas fa-trash\"></i></button>\r\n      </li>);\r\n  } */\r\n  return (\r\n    <li key={props.task.key}>\r\n      <input type=\"checkbox\" onChange={checkboxOnChange} checked={props.task.completed} />\r\n      <div onDoubleClick={handleOnDblClick}>\r\n        <input ref={inputRef} placeholder=\"Enter a task...\" className={props.task.completed && !descInput ? \"task-text-input finished\" : \"task-text-input\"} type=\"text\" onBlur={handleOnBlur} onChange={handleTextOnChange} value={props.task.description} disabled={!descInput} autoFocus />\r\n      </div>\r\n      <button className=\"delete-task-button\" onClick={() => props.deleteTask(props.task.key)}><i className=\"fas fa-trash\"></i></button>\r\n    </li>);\r\n}\r\n\r\nexport default Task;",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":12,"column":6,"nodeType":"32","endLine":12,"endColumn":17,"suggestions":"33"},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inputRef'. Either include it or remove the dependency array.","ArrayExpression",["38"],["36"],["37"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [descInput, inputRef]",{"range":"41","text":"42"},[412,423],"[descInput, inputRef]"]