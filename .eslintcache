[{"C:\\node\\To do list\\app\\todo-list\\src\\index.js":"1","C:\\node\\To do list\\app\\todo-list\\src\\App.js":"2","C:\\node\\To do list\\app\\todo-list\\src\\reportWebVitals.js":"3","C:\\node\\To do list\\app\\todo-list\\src\\Task.js":"4","C:\\node\\To do list\\app\\todo-list\\src\\SettingsBar.js":"5","C:\\node\\To do list\\app\\todo-list\\src\\TaskList.js":"6","C:\\node\\To do list\\app\\todo-list\\src\\contexts.js":"7"},{"size":513,"mtime":1609943455977,"results":"8","hashOfConfig":"9"},{"size":1223,"mtime":1610045967871,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2463,"mtime":1610048254662,"results":"12","hashOfConfig":"9"},{"size":2281,"mtime":1610048552404,"results":"13","hashOfConfig":"9"},{"size":1909,"mtime":1610046644887,"results":"14","hashOfConfig":"9"},{"size":677,"mtime":1610028690249,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1u8fgzm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\node\\To do list\\app\\todo-list\\src\\index.js",[],["32","33"],"C:\\node\\To do list\\app\\todo-list\\src\\App.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\reportWebVitals.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\Task.js",["34"],"import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext } from \"./contexts\";\r\n\r\nfunction Task(props) {\r\n  // This state changes to 'false' when double clicked on task '<p>' and goes back to 'true' with 'onBlur'\r\n  const [descInput, setDescInput] = useState(\r\n    props.task.description === \"\" ? true : false\r\n  );\r\n\r\n  const inputRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n    inputRef.current.select();\r\n  }, [descInput]);\r\n\r\n  const checkboxOnChange = () => {\r\n    // Handles checkbox clicks and lifting state up\r\n    const changedTask = props.task;\r\n    changedTask.completed = !changedTask.completed;\r\n    props.changeTask(changedTask);\r\n  };\r\n\r\n  const handleTextOnChange = (e) => {\r\n    // Handles user changes of input with task description and lifting state up\r\n    const changedTask = props.task;\r\n    changedTask.description = e.target.value;\r\n    props.changeTask(changedTask);\r\n  };\r\n\r\n  const handleOnDblClick = (e) => {\r\n    setDescInput(true);\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    setDescInput(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ theme, changeTheme }) => (\r\n        <li key={props.task.key}>\r\n          <input\r\n            type='checkbox'\r\n            onChange={checkboxOnChange}\r\n            style={{ backgroundColor: theme.listBackground }}\r\n            checked={props.task.completed}\r\n          />\r\n          {/*onDoubleClick doesn't work with disabled input so this div with this function is here*/}\r\n          <div onDoubleClick={handleOnDblClick}>\r\n            <input\r\n              ref={inputRef}\r\n              placeholder='Enter a task...'\r\n              className={\r\n                props.task.completed && !descInput\r\n                  ? \"task-text-input finished\"\r\n                  : \"task-text-input\"\r\n              }\r\n              type='text'\r\n              onBlur={handleOnBlur}\r\n              onChange={handleTextOnChange}\r\n              value={props.task.description}\r\n              disabled={!descInput}\r\n              style={{ color: theme.text }}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <button\r\n            className='delete-task-button'\r\n            onClick={() => props.deleteTask(props.task.key)}\r\n          >\r\n            <i className='fas fa-trash' style={{ color: theme.text }}></i>\r\n          </button>\r\n        </li>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","C:\\node\\To do list\\app\\todo-list\\src\\SettingsBar.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\TaskList.js",[],"C:\\node\\To do list\\app\\todo-list\\src\\contexts.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":15,"column":6,"nodeType":"41","endLine":15,"endColumn":17,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inputRef'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [descInput, inputRef]",{"range":"48","text":"49"},[466,477],"[descInput, inputRef]"]